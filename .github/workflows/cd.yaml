name: build-image

on:
  push:
    tags:
      - "*"
    branches:
      - master
    paths:
      - "cmd/**"
      - "internal/**"
      - "pkg/**"
  workflow_dispatch:

env:
  REGISTRY_IMAGE: ehco1996/ehco

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.21"
        id: go

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: tidy
        run: make tidy

      - name: lint
        run: make lint

      - name: test
        run: make test

  build-bin:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.21"
        id: go

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: build
        run: |
          mkdir -p /tmp/ehco
          make build
          mv ./dist/ehco /tmp/ehco/ehco-amd64
          make build-arm
          mv ./dist/ehco /tmp/ehco/ehco-arm64
          cp ./build/Dockerfile /tmp/ehco/Dockerfile

      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: binaries
          path: /tmp/ehco
          if-no-files-found: error
          retention-days: 1

  build-image:
    runs-on: ubuntu-latest
    needs:
      - build-bin
      - test
    strategy:
      fail-fast: true
      matrix:
        platform: [amd64, arm64]
    steps:
      - name: Download binaries
        uses: actions/download-artifact@v4
        with:
          name: binaries
          path: /tmp/ehco
      - name: Rename the binary
        run: |
          cp /tmp/ehco/ehco-${{ matrix.platform }} /tmp/ehco/ehco

      - name: Set up qemu
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build multi-platform image
        uses: docker/build-push-action@v5
        id: build
        with:
          context: /tmp/ehco
          file: /tmp/ehco/Dockerfile
          platforms: linux/${{ matrix.platform }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true
      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"
      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs:
      - build-image
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          name: digests
          path: /tmp/digests
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
            type=sha
            type=raw,value=latest
            type=ref,event=tag
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)
      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}
