name: normal

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: "1.20"
        id: go

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - name: tidy
        run: make tidy

      # - name: lint
      #   run: make lint
      # TODO: fix download golangci-lint

      - name: test
        run: make test

      - name: build
        run: make build

  build-latest-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build x86 image
        uses: docker/build-push-action@v4
        with:
          context: .
          tags: "ehco1996/ehco:latest"
          push: true
          file: build/Dockerfile

      # TODO fix the arm build error  gcc: error: unrecognized command-line option '-marm'; did you mean '-mabm'?
      # - name: Build arm image
      #   uses: docker/build-push-action@v4
      #   with:
      #     context: .
      #     tags: "ehco1996/ehco:arm64"
      #     push: true
      #     file: build/arm.Dockerfile
